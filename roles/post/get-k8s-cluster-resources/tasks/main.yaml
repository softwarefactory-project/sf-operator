---
- name: "Ensure removal of {{ output_dir }}"
  ansible.builtin.file:
    path: "{{ output_dir }}"
    state: absent

- name: "Ensure {{ output_dir }}"
  ansible.builtin.file:
    path: "{{ output_dir }}"
    state: directory

- name: Get nodes information
  ansible.builtin.shell: |
    kubectl describe nodes > {{ output_dir }}/nodes.txt
  ignore_errors: true

- name: Create CRDs directory
  ansible.builtin.file:
    path: "{{ output_dir }}/CRDs"
    state: directory
    mode: '0755'

- name: Describe CRDs
  ansible.builtin.shell: |
    for item in $(kubectl get crd -o name); do
      mkdir -p {{ output_dir }}/CRDs/$(dirname $item)
      oc describe $item > {{ output_dir }}/CRDs/${item}.txt
    done
  ignore_errors: true

- name: Describe resources
  ansible.builtin.shell: |
    for item in $(kubectl get {{ item }} -o name); do
      mkdir -p {{ output_dir }}/$(dirname $item)
      kubectl describe $item > {{ output_dir }}/${item}.txt
    done
  ignore_errors: true
  loop:
    - pv
  tags:
    skip_ansible_lint

- name: Check if some pod was OOMKilled
  ansible.builtin.shell: |
    kubectl get events --all-namespaces --sort-by='.lastTimestamp' -A | grep -i oom | tee {{ output_dir }}/oomkilled.log
  register: _oomkill_status
  ignore_errors: true

- name: Print warning message when OOMKill occured
  ansible.builtin.shell: |
    echo -e "\n\n\n\nOOMKill occured!\n{{ _oomkill_status.stdout }}\n\n\n\n"
  when: _oomkill_status.stdout | length > 0
